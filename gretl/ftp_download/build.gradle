buildscript {
    repositories {
        mavenLocal()      
        maven {
            url "http://jars.interlis.ch"
        }
        maven {
            url "http://download.osgeo.org/webdav/geotools/"
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }        
        mavenCentral()
        jcenter()
    }  
    dependencies {
        classpath "commons-net:commons-net:3.6"
    }    
}

plugins {
    id "de.undercouch.download" version "3.4.3"
    id "ch.so.agi.gretl" version "1.0.5-SNAPSHOT"
    id 'org.hidetake.ssh' version '2.9.0'
}

description = """\n
Proof of concept für den AV-Import....
"""

import ch.so.agi.gretl.tasks.*
import ch.so.agi.gretl.api.TransferSet
import java.nio.file.Paths
import java.nio.file.Files
import org.apache.commons.net.ftp.FTPClient
import org.apache.commons.net.ftp.FTP

// Download- und Unzip-Verzeichnis
def pathToTempFolder = System.getProperty("java.io.tmpdir")
def pathToUnzipFolder = Paths.get(pathToTempFolder, 'unzip_data')

def GROUP = "AV-Import: FTP-Download"

task fubar() {
    group = GROUP
    doLast {
        println "asdf"

        def ftpClient = new FTPClient()
        ftpClient.connect("ftp.infogrips.ch", 21)

        if (!ftpClient.login("yyyyyyyyy", "xxxxxxx")) {
            ftpClient.disconnect()
            throw new IOException("Could not login to ftp server.")
        }
        int reply = ftpClient.getReplyCode()
        println reply

        //Collection<String> files = ftpClient.listFiles("");
        //def files = ftpClient.listFiles("DM01AVSO24LV95/itf");
        def files = ftpClient.listNames("DM01AVSO24LV95/itf");
        //println files
        files.each {
            //println it.getSize()
            //println it.getName()
            println it
        }
        //File outFile = new File()
        String outPathName = "/Users/stefan/tmp/"
        String outFileName = "240200.zip"

        if (!files.contains(outFileName)) {
            println "not found on server -> stop "
            return
        }
        println files.contains(outFileName)

        FileOutputStream out = new FileOutputStream("/Users/stefan/tmp/240200.zip")
        ftpClient.retrieveFile("/DM01AVSO24LV95/itf/240200.zip", out)


        println out.getChannel().size()


        println "fubar"


        // zip file grösse überprüfen > 0

        // TODO: what happens when file does not exist?

        ftpClient.disconnect()

        // read only
        /*
        String ftpUrl = "ftp://xxxxxxx:yyyyyyy@ftp.infogrips.ch:21/DM01AVSO24LV95/itf/258100.zip"
        URLConnection urlConnection = new URL(ftpUrl).openConnection()
        InputStream inputStream = urlConnection.getInputStream()
        Files.copy(inputStream, new File("/Users/stefan/tmp/fubar.zip").toPath())
        inputStream.close()
        */
    }
}

